name: LWJGL Build

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PARAMS: --acl public-read --cache-control "public,must-revalidate,proxy-revalidate,max-age=0"
  ANT_OPTS: -Xmx1G

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [arm64]
        include:
          - ARCH: arm64
            JDK: zulu8.52.0.23-ca-fx-jdk8.0.282-win_x64
            MSVC_ARCH: amd64_arm64
    env:
      JAVA_HOME: ${{matrix.JDK}}
      LWJGL_BUILD_TYPE: nightly
      LWJGL_BUILD_ARCH: ${{matrix.ARCH}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - run: |
          git clone https://github.com/LWJGL-CI/OculusSDK.git ../OculusSDK
          Invoke-WebRequest https://cdn.azul.com/zulu/bin/${{matrix.JDK}}.zip -OutFile jdk.zip
          Expand-Archive -Path jdk.zip -DestinationPath .\
        name: Install dependencies
      - run: ant -emacs hydrate-kotlinc clean-generated generate
        shell: cmd
        name: Generate bindings
      - run: ant -emacs compile
        shell: cmd
        name: Build Java
      - run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{matrix.MSVC_ARCH}}
          ant -emacs compile-native
        shell: cmd
        name: Build native
      - run: ant -emacs tests
        shell: cmd
        if: contains(matrix.ARCH, 'arm') != true
        name: Run tests
      - run: type bin\test\testng-results.xml
        shell: cmd
        if: failure()
        name: Print test results
      - run: ant -emacs upload-native
        shell: cmd
        name: Upload artifacts
